
import tensorflow as tf
from tensorflow.examples.tutorials.mnist import input_data
mnist = input_data.read_data_sets("MNIST_data",one_hot=True)
#批次大小
batch_size = 100;
#一共计算多少个批次
n_batch = mnist.train.num_examples//batch_size
x = tf.placeholder(tf.float32,[None,784])
y = tf.placeholder(tf.float32,[None,10])

W = tf.Variable(tf.zeros([784,10]))
b = tf.Variable(tf.zeros([10]))
predict = tf.nn.softmax(tf.matmul(x,W)+b)

loss = tf.reduce_mean(tf.square(y - predict))

train_step = tf.train.GradientDescentOptimizer(0.2).minimize(loss)

init = tf.global_variables_initializer()
correct_predict = tf.equal(tf.argmax(predict,1),tf.arg_max(y,1))
accuracy = tf.reduce_mean(tf.cast(correct_predict,tf.float32))



with tf.Session() as sess:
    sess.run(init)
    for epoch in range(21):
        for batch in range (n_batch):
            batch_xs,batch_ys = mnist.train.next_batch(batch_size)
            sess.run(train_step,feed_dict={x:batch_xs,y:batch_ys})
        acc = sess.run(accuracy,feed_dict={x:mnist.test.images,y:mnist.test.labels})
        print("Training accuracy:{}".format(acc))
